{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Easy Markup Language",
	"patterns": [
		{
			"include": "#fileImports"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#attributes"
		},
		{
			"include": "#symbols"
		}
		
	],
	"repository": {
		"comments":{
			"patterns": [
				{
					"captures": {
						"0":{
							"name":"punctuation.definition.comment.exml"
						}
					},
					"match": "\\$\\$\\$\\$\\$\\$",
					"name": "comment.block.empty.exml"
				},
				{
					"include": "#comments-inline"	
				}
			]
		},
		"comments-inline":{
			"patterns": [
				{
					"begin": "\\$\\$\\$",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.exml"
						}
					},
					"end": "\\$\\$\\$",
					"name": "comment.block.exml"
				}
			]
		},
		"attributes":{
			"patterns":[
				{
					"begin": "%",
					"captures": {
						"0": {
							"name": "punctuation.definition.attribute.exml"
						}
					},
					"end": "=",
					"name": "entity.other.attribute-name.exml"
				},
				{
					
					"name": "string.quoted.double.exml",
					"match": "(?<=(%.*=)).*"
				}
			]
		},
		"symbols":{
			"patterns":[
				{
					"name": "punctuation.definition.tag.begin.exml",
					"match": "(?<!\\$)\\$(?!\\$)"
				},
				{
					"name": "punctuation.definition.tag.end.exml",
					"match": "§"
				},
				{
					"name":"entity.name.tag",
					"comment": "This is the tag Name of the HTML Object",
					"match":"(?<=\\$).*?(?=!|$|§| )"
				},
				{
					"name": "keyword.control",
					"comment": "This is the Name of the HTML Object",
					"match": "(?<=(\\$.*!.*!.*!)).*?(?=§|!| |$)"
				},
				{
					"name": "entity.name.function",
					"comment": "This is the ID of the HTML Object",
					"match": "(?<=(\\$.*!.*!)).*?(?=§|!| |$)"
				},
				{
					"name": "entity.name.class",
					"comment": "This is the class Name of the HTML Object",
					"match": "(?<=(\\$.*!)).*?(?=§|!| |$)"
				}
			]
		},
		"fileImports": {
			"patterns":[
				{
					"begin": "(?<=\\$img)",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "(\\.png)|(\\.jpg)|(\\.jpeg)|(\\.gif)|(\\.bmp)|(\\.svg)"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?((?=\\.png)|(?=\\.jpg)|(?=\\.jpeg)|(?=\\.gif)|(?=\\.bmp)|(?=\\.svg))"
						}
						
					]
				},
				{
					"begin": "(?<=\\$audio)",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "(\\.mp3)|(\\.wav)|(\\.ogg)|(\\.flac)|(\\.m4a)|(\\.wma)"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?((?=\\.mp3)|(?=\\.wav)|(?=\\.ogg)|(?=\\.flac)|(?=\\.m4a)|(?=\\.wma))"
						}
						
					]
				},
				{
					"begin": "(?<=\\$video)",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "(\\.mp4)|(\\.webm)|(\\.ogg)|(\\.flv)|(\\.avi)|(\\.wmv)"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?((?=\\.mp4)|(?=\\.webm)|(?=\\.ogg)|(?=\\.flv)|(?=\\.avi)|(?=\\.wmv))"
						}
						
					]
				},
				{
					"begin": "(?<=\\$iframe",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "(\\.html)|(\\.exml)|(\/)"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?((?=\\.html) | (?=\\.exml) | (?=\/))"
						}
						
					]
				},
				{
					"begin": "(?<=\\$import)",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "\\.exml"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?(?=\\.exml)"
						}
						
					]
				},
				{
					"begin": "(?<=\\$script)",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "\\.js"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?(?=\\.js)"
						}
						
					]
				},
				{
					"begin": "(?<=\\$link)",
					"end": "(?=§)",
					"patterns": [
						{
							"name": "constant.regexp",
							"match": "\\.css"
						},
						{
							"name": "keyword.operator.new",
							"match": ";"
						},
						{
							"name":"constant.character.escape",
							"match": ".*?(?=\\.css)"
						}
						
					]
				}
			]
		}
	},
	"scopeName": "source.exml"
}